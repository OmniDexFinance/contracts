{
	"compiler": {
		"version": "0.8.1+commit.df193b15"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_adminAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasuryAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_WTLOSAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_minimumAskPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maximumAskPrice",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "AskCancel",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "askPrice",
						"type": "uint256"
					}
				],
				"name": "AskNew",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "askPrice",
						"type": "uint256"
					}
				],
				"name": "AskUpdate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					}
				],
				"name": "CollectionClose",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "whitelistChecker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tradingFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "creatorFee",
						"type": "uint256"
					}
				],
				"name": "CollectionNew",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "whitelistChecker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tradingFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "creatorFee",
						"type": "uint256"
					}
				],
				"name": "CollectionUpdate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "treasury",
						"type": "address"
					}
				],
				"name": "NewAdminAndTreasuryAddresses",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minimumAskPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "maximumAskPrice",
						"type": "uint256"
					}
				],
				"name": "NewMinimumAndMaximumAskPrices",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "NonFungibleTokenRecovery",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RevenueClaim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokenRecovery",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "askPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "netPrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "withTLOS",
						"type": "bool"
					}
				],
				"name": "Trade",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "TOTAL_MAX_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WTLOS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_creator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_whitelistChecker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tradingFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_creatorFee",
						"type": "uint256"
					}
				],
				"name": "addCollection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "buyTokenUsingTLOS",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"name": "buyTokenUsingWTLOS",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "calculatePriceAndFeesForCollection",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "netPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tradingFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "creatorFee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "_tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "canTokensBeListed",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "listingStatuses",
						"type": "bool[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "cancelAskOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimPendingRevenue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					}
				],
				"name": "closeCollectionForTradingAndListing",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_askPrice",
						"type": "uint256"
					}
				],
				"name": "createAskOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maximumAskPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumAskPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "modifyAskOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collection",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_creator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_whitelistChecker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tradingFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_creatorFee",
						"type": "uint256"
					}
				],
				"name": "modifyCollection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pendingRevenue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "recoverFungibleTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "recoverNonFungibleToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_adminAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_treasuryAddress",
						"type": "address"
					}
				],
				"name": "setAdminAndTreasuryAddresses",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treasuryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_minimumAskPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maximumAskPrice",
						"type": "uint256"
					}
				],
				"name": "updateMinimumAndMaximumPrices",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cursor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "viewAsksByCollection",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct ERC721NFTMarketV1.Ask[]",
						"name": "askInfo",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cursor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "viewAsksByCollectionAndSeller",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct ERC721NFTMarketV1.Ask[]",
						"name": "askInfo",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collection",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "viewAsksByCollectionAndTokenIds",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "statuses",
						"type": "bool[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "seller",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct ERC721NFTMarketV1.Ask[]",
						"name": "askInfo",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cursor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "viewCollections",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "collectionAddresses",
						"type": "address[]"
					},
					{
						"components": [
							{
								"internalType": "enum ERC721NFTMarketV1.CollectionStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "creatorAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "whitelistChecker",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tradingFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "creatorFee",
								"type": "uint256"
							}
						],
						"internalType": "struct ERC721NFTMarketV1.Collection[]",
						"name": "collectionDetails",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addCollection(address,address,address,uint256,uint256)": {
					"details": "Callable by admin",
					"params": {
						"_collection": ": collection address",
						"_creator": ": creator address (must be 0x00 if none)",
						"_creatorFee": ": creator fee (100 = 1%, 500 = 5%, 5 = 0.05%, 0 if creator is 0x00)",
						"_tradingFee": ": trading fee (100 = 1%, 500 = 5%, 5 = 0.05%)",
						"_whitelistChecker": ": whitelist checker (for additional restrictions, must be 0x00 if none)"
					}
				},
				"buyTokenUsingTLOS(address,uint256)": {
					"params": {
						"_collection": ": contract address of the NFT",
						"_tokenId": ": tokenId of the NFT purchased"
					}
				},
				"buyTokenUsingWTLOS(address,uint256,uint256)": {
					"params": {
						"_collection": ": contract address of the NFT",
						"_price": ": price (must be equal to the askPrice set by the seller)",
						"_tokenId": ": tokenId of the NFT purchased"
					}
				},
				"calculatePriceAndFeesForCollection(address,uint256)": {
					"params": {
						"collection": ": address of the collection",
						"price": ": listed price"
					}
				},
				"canTokensBeListed(address,uint256[])": {
					"details": "if collection is not for trading, it returns array of bool with false",
					"params": {
						"_collection": ": address of the collection",
						"_tokenIds": ": array of tokenIds"
					}
				},
				"cancelAskOrder(address,uint256)": {
					"params": {
						"_collection": ": contract address of the NFT",
						"_tokenId": ": tokenId of the NFT"
					}
				},
				"closeCollectionForTradingAndListing(address)": {
					"details": "Callable by admin",
					"params": {
						"_collection": ": collection address"
					}
				},
				"constructor": {
					"params": {
						"_WTLOSAddress": ": WTLOS address",
						"_adminAddress": ": address of the admin",
						"_maximumAskPrice": ": maximum ask price",
						"_minimumAskPrice": ": minimum ask price",
						"_treasuryAddress": ": address of the treasury"
					}
				},
				"createAskOrder(address,uint256,uint256)": {
					"params": {
						"_askPrice": ": price for listing (in wei)",
						"_collection": ": contract address of the NFT",
						"_tokenId": ": tokenId of the NFT"
					}
				},
				"modifyAskOrder(address,uint256,uint256)": {
					"params": {
						"_collection": ": contract address of the NFT",
						"_newPrice": ": new price for listing (in wei)",
						"_tokenId": ": tokenId of the NFT"
					}
				},
				"modifyCollection(address,address,address,uint256,uint256)": {
					"details": "Callable by admin",
					"params": {
						"_collection": ": collection address",
						"_creator": ": creator address (must be 0x00 if none)",
						"_creatorFee": ": creator fee (100 = 1%, 500 = 5%, 5 = 0.05%, 0 if creator is 0x00)",
						"_tradingFee": ": trading fee (100 = 1%, 500 = 5%, 5 = 0.05%)",
						"_whitelistChecker": ": whitelist checker (for additional restrictions, must be 0x00 if none)"
					}
				},
				"onERC721Received(address,address,uint256,bytes)": {
					"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"recoverFungibleTokens(address)": {
					"details": "Callable by owner",
					"params": {
						"_token": ": token address"
					}
				},
				"recoverNonFungibleToken(address,uint256)": {
					"details": "Callable by owner",
					"params": {
						"_token": ": NFT token address",
						"_tokenId": ": tokenId"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setAdminAndTreasuryAddresses(address,address)": {
					"details": "Only callable by owner",
					"params": {
						"_adminAddress": ": address of the admin",
						"_treasuryAddress": ": address of the treasury"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateMinimumAndMaximumPrices(uint256,uint256)": {
					"details": "Callable by admin",
					"params": {
						"_maximumAskPrice": ": maximum ask price",
						"_minimumAskPrice": ": minimum ask price"
					}
				},
				"viewAsksByCollection(address,uint256,uint256)": {
					"params": {
						"collection": ": address of the collection",
						"cursor": ": cursor",
						"size": ": size of the response"
					}
				},
				"viewAsksByCollectionAndSeller(address,address,uint256,uint256)": {
					"params": {
						"collection": ": address of the collection",
						"cursor": ": cursor",
						"seller": ": address of the seller",
						"size": ": size of the response"
					}
				},
				"viewAsksByCollectionAndTokenIds(address,uint256[])": {
					"params": {
						"collection": ": address of the collection",
						"tokenIds": ": array of tokenId"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addCollection(address,address,address,uint256,uint256)": {
					"notice": "Add a new collection"
				},
				"buyTokenUsingTLOS(address,uint256)": {
					"notice": "Buy token with TLOS by matching the price of an existing ask order"
				},
				"buyTokenUsingWTLOS(address,uint256,uint256)": {
					"notice": "Buy token with WTLOS by matching the price of an existing ask order"
				},
				"calculatePriceAndFeesForCollection(address,uint256)": {
					"notice": "Calculate price and associated fees for a collection"
				},
				"canTokensBeListed(address,uint256[])": {
					"notice": "Checks if an array of tokenIds can be listed"
				},
				"cancelAskOrder(address,uint256)": {
					"notice": "Cancel existing ask order"
				},
				"claimPendingRevenue()": {
					"notice": "Claim pending revenue (treasury or creators)"
				},
				"closeCollectionForTradingAndListing(address)": {
					"notice": "Allows the admin to close collection for trading and new listing"
				},
				"constructor": {
					"notice": "Constructor"
				},
				"createAskOrder(address,uint256,uint256)": {
					"notice": "Create ask order"
				},
				"modifyAskOrder(address,uint256,uint256)": {
					"notice": "Modify existing ask order"
				},
				"modifyCollection(address,address,address,uint256,uint256)": {
					"notice": "Modify collection characteristics"
				},
				"recoverFungibleTokens(address)": {
					"notice": "Allows the owner to recover tokens sent to the contract by mistake"
				},
				"recoverNonFungibleToken(address,uint256)": {
					"notice": "Allows the owner to recover NFTs sent to the contract by mistake"
				},
				"setAdminAndTreasuryAddresses(address,address)": {
					"notice": "Set admin address"
				},
				"updateMinimumAndMaximumPrices(uint256,uint256)": {
					"notice": "Allows the admin to update minimum and maximum prices for a token (in wei)"
				},
				"viewAsksByCollection(address,uint256,uint256)": {
					"notice": "View ask orders for a given collection across all sellers"
				},
				"viewAsksByCollectionAndSeller(address,address,uint256,uint256)": {
					"notice": "View ask orders for a given collection and a seller"
				},
				"viewAsksByCollectionAndTokenIds(address,uint256[])": {
					"notice": "Check asks for an array of tokenIds in a collection"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"omnidex/nft-marketplace/ERC721NFTMarketV1.sol": "ERC721NFTMarketV1"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
			"license": "MIT",
			"urls": [
				"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
				"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
				"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
			"license": "MIT",
			"urls": [
				"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
				"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
			"license": "MIT",
			"urls": [
				"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
				"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
			]
		},
		"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
			"keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
			"license": "MIT",
			"urls": [
				"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
				"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31",
				"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS"
			]
		},
		"omnidex/nft-marketplace/ERC721NFTMarketV1.sol": {
			"keccak256": "0x46296a16ccf0579679bd92c9b6939195c0bf4ed1de0de6accee572300f3046ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://24037209a0c9bb34a609efc2237507a52de8824389d84a4ff3d075a5f04eebba",
				"dweb:/ipfs/QmbzCiVfsjy8ZGX4z2AZcYFs6drRVBm6PLHKSoxQSUYwv6"
			]
		},
		"omnidex/nft-marketplace/interfaces/ICollectionWhitelistChecker.sol": {
			"keccak256": "0x7d029805b62a0d5bc2a29f67df1c00a625c395ffa3596378152ab65b2ce77adb",
			"urls": [
				"bzz-raw://27fa1ff3ba78910261a803fc927a2171b57628808a39bc3d71a65651518a2d3f",
				"dweb:/ipfs/QmWh8PCGmLKhjUMxGbME7rNV8EtDhkoVpPmVK43cVszkxv"
			]
		},
		"omnidex/nft-marketplace/interfaces/IWETH.sol": {
			"keccak256": "0x8e3cb4f119f96bcfdc46bd408eb15579ad4ed57a2dcea3bffaa602f3b2f97020",
			"urls": [
				"bzz-raw://620990f432785695295b04a05a9649311e5e818b5df46037075a6fce030fa996",
				"dweb:/ipfs/QmNkUYEhC2dTeWU6qPqdk2v62vwMYJAqtUZoMmcwC1jtpm"
			]
		}
	},
	"version": 1
}